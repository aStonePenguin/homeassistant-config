##############################################################################
# Automations to display media player info on page 8

homeassistant:
  customize:
    ################################################
    ## Node Anchors
    ################################################

    package.node_anchors:
      media_player_entity: &media_player_entity
          entity_id: media_player.all_speakers

automation:
# Initialize button text/font for media controls on start
  - alias: hasp_down_plate_p8_MediaInit
    trigger:
    - platform: mqtt
      topic: 'hasp/down_plate/status'
      payload: 'ON'
    action:
    - service: mqtt.publish
      data:
        topic: 'hasp/down_plate/command/p[8].b[6].font'
        payload: '4'
    - service: mqtt.publish
      data:
        topic: 'hasp/down_plate/command/p[8].b[7].font'
        payload: '4'
    - service: mqtt.publish
      data:
        topic: 'hasp/down_plate/command/p[8].b[8].font'
        payload: '4'
    - service: mqtt.publish
      data:
        topic: 'hasp/down_plate/command/p[8].b[6].txt'
        payload: '"9"'
    - service: mqtt.publish
      data:
        topic: 'hasp/down_plate/command/p[8].b[7].txt'
        payload: '";"'
    - service: mqtt.publish
      data:
        topic: 'hasp/down_plate/command/p[8].b[8].txt'
        payload: '":"'

  # Play/Pause button action
  - alias: hasp_down_plate_p8_MediaPauseButton7
    trigger:
      platform: mqtt
      topic: 'hasp/down_plate/state/p[8].b[7]'
      payload: 'ON'
    action:
      service: media_player.media_play_pause
      <<: *media_player_entity

  # Prev Track button action
  - alias: hasp_down_plate_p8_MediaPrevTrackButton6
    trigger:
      platform: mqtt
      topic: 'hasp/down_plate/state/p[8].b[6]'
      payload: 'ON'
    action:
      service: media_player.media_previous_track
      <<: *media_player_entity

  # Next Track button action
  - alias: hasp_down_plate_p8_MediaNextTrackButton8
    trigger:
      platform: mqtt
      topic: 'hasp/down_plate/state/p[8].b[8]'
      payload: 'ON'
    action:
      service: media_player.media_next_track
      <<: *media_player_entity

  # Scale media information fonts to fit
  # 0 consolas 24 - 20 chars x 2 lines (wrapped)
  # 1 consolas 32 - 15 chars x 2 lines (wrapped)
  # 2 consolas 48 - 10 chars x 1 line
  # 3 consolas 80 - 6 chars x 1 line
  - alias: hasp_down_plate_p8_MediaArtist
    trigger:
    - platform: state
      entity_id: sensor.media_player_artist
    - platform: mqtt
      topic: 'hasp/down_plate/status'
      payload: 'ON'
    action:
    - service: mqtt.publish
      data:
        topic: 'hasp/down_plate/command/p[8].b[4].font'
        payload_template: "{% if state_attr('media_player.all_speakers', 'media_artist')|length <= 6 -%}3{% elif (state_attr('media_player.all_speakers', 'media_artist')|length > 6) and (state_attr('media_player.all_speakers', 'media_artist')|length <= 10) %}2{% elif (state_attr('media_player.all_speakers', 'media_artist')|length > 10) and (state_attr('media_player.all_speakers', 'media_artist')|length <= 15) %}1{% else %}0{%- endif %}"
    - service: mqtt.publish
      data:
        topic: 'hasp/down_plate/command/p[8].b[4].txt'
        payload_template: "{{ state_attr('media_player.all_speakers', 'media_artist')|wordwrap(20, wrapstring='\\r') }}"

  - alias: hasp_down_plate_p8_MediaTitle
    trigger:
    - platform: state
      entity_id: sensor.media_player_title
    - platform: mqtt
      topic: 'hasp/down_plate/status'
      payload: 'ON'
    action:
    - service: mqtt.publish
      data:
        topic: 'hasp/down_plate/command/p[8].b[5].font'
        payload_template: "{% if state_attr('media_player.all_speakers', 'media_title')|length <= 6 -%}3{% elif (state_attr('media_player.all_speakers', 'media_title')|length > 6) and (state_attr('media_player.all_speakers', 'media_title')|length <= 10) %}2{% elif (state_attr('media_player.all_speakers', 'media_title')|length > 10) and (state_attr('media_player.all_speakers', 'media_title')|length <= 15) %}1{% else %}0{%- endif %}"
    - service: mqtt.publish
      data:
        topic: 'hasp/down_plate/command/p[8].b[5].txt'
        payload_template: "{{ state_attr('media_player.all_speakers', 'media_title')|wordwrap(20, wrapstring='\\r') }}"

  - alias: hasp_down_plate_p8_MediaPlayPause
    trigger:
    - platform: state
      <<: *media_player_entity
    action:
    - service: mqtt.publish
      data:
        topic: 'hasp/down_plate/command/p[8].b[7].txt'
        payload_template: "\"{%- if is_state('media_player.all_speakers', 'playing') %};{% elif is_state('media_player.all_speaker', 'paused') %}4{% endif -%}\""

  # Volume slider value published, apply published state
  - alias: hasp_down_plate_p8_MediaVolSliderUpdateHass
    trigger:
      platform: mqtt
      topic: 'hasp/down_plate/state/p[8].b[9].val'
    action:
    - service: media_player.volume_set
      data_template:
        <<: *media_player_entity
        volume_level: '{{ (trigger.payload|int) / 100 }}'

  # Volume slider value changed by hass, update HASP
  - alias: hasp_down_plate_p8_MediaVolSliderUpdateHASP
    trigger:
    - platform: state
      entity_id: sensor.media_player_volume
    - platform: mqtt
      topic: 'hasp/down_plate/status'
      payload: 'ON'
    action:
    - service: mqtt.publish
      data:
        topic: 'hasp/down_plate/command/p[8].b[9].val'
        payload_template: '{{ (states.sensor.media_player_volume.state * 100)|int }}'
