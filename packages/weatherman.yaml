###############################################################################
#  @author       :  Rohan Kapoor
#  @date         :  09/12/2023
#  @package      :  Weatherman
#  @description  :  Bundles up all relevant data to send over to Weatherman (ESPHome device).
#                   Based off https://github.com/Madelena/esphome-weatherman-dashboard
###############################################################################
---
template:
  - trigger:
      platform: time_pattern
      minutes: "/1"
    action:
      - service: weather.get_forecasts
        data:
          type: hourly
        target:
          entity_id: weather.pirateweather
        response_variable: hourly_weather
      - variables:
          forecast: "{{ hourly_weather['weather.pirateweather'].forecast }}"

    sensor:
      - name: Weatherman Data
        state: "OK"
        attributes:
          weather_condition_now: >
            {% set cond_now = states('weather.pirateweather') %}
            {% if states('sun.sun') == 'below_horizon' %}
                {% if cond_now == 'sunny' %} night {% elif cond_now == 'partlycloudy' %} night-partly-cloudy {% else %} {{ cond_now }} {% endif %}
            {% else %}
                {{ cond_now }}
            {% endif %}

          weather_condition_0: >
            {% set cond0 = forecast[1].condition %}
            {% set next_setting = as_timestamp(state_attr('sun.sun', 'next_setting')) %}
            {% set next_rising = as_timestamp(state_attr('sun.sun', 'next_rising')) %}
            {% set cond0_time = as_timestamp(forecast[1].datetime) %}
            {% if cond0_time < next_rising and next_rising < next_setting %}
                {% if cond0 == 'sunny' %} night {% elif cond0 == 'partlycloudy' %} night-partly-cloudy {% else %} {{ cond0 }} {% endif %}
            {% else %}
                {{ cond0 }}
            {% endif %}
          weather_temperature_0: >
            {{ forecast[1].temperature | round }}
          weather_humidity_0: >
            {{ forecast[1].humidity | round }}
          weather_precipitation_0: >
            {{ forecast[1].precipitation }}
          weather_timestamp_0: >
            {{ as_timestamp(forecast[1].datetime) | timestamp_custom('%I') | int }} {{ as_timestamp(forecast[1].datetime) | timestamp_custom('%p') }}

          weather_condition_1: >
            {% set cond1 = forecast[2].condition %}
            {% set next_setting = as_timestamp(state_attr('sun.sun', 'next_setting')) %}
            {% set next_rising = as_timestamp(state_attr('sun.sun', 'next_rising')) %}
            {% set cond1_time = as_timestamp(forecast[2].datetime) %}
            {% if cond1_time < next_rising and next_rising < next_setting %}
                {% if cond1 == 'sunny' %} night {% elif cond1 == 'partlycloudy' %} night-partly-cloudy {% else %} {{ cond1 }} {% endif %}
            {% else %}
                {{ cond1 }}
            {% endif %}
          weather_temperature_1: >
            {{ forecast[2].temperature | round }}
          weather_humidity_1: >
            {{ forecast[2].humidity | round }}
          weather_precipitation_1: >
            {{ forecast[2].precipitation }}
          weather_timestamp_1: >
            {{ as_timestamp(forecast[2].datetime) | timestamp_custom('%I') | int }} {{ as_timestamp(forecast[2].datetime) | timestamp_custom('%p') }}

          weather_condition_2: >
            {% set cond2 = forecast[3].condition %}
            {% set next_setting = as_timestamp(state_attr('sun.sun', 'next_setting')) %}
            {% set next_rising = as_timestamp(state_attr('sun.sun', 'next_rising')) %}
            {% set cond2_time = as_timestamp(forecast[3].datetime) %}
            {% if cond2_time < next_rising and next_rising < next_setting %}
                {% if cond2 == 'sunny' %} night {% elif cond2 == 'partlycloudy' %} night-partly-cloudy {% else %} {{ cond2 }} {% endif %}
            {% else %}
                {{ cond2 }}
            {% endif %}
          weather_temperature_2: >
            {{ forecast[3].temperature | round }}
          weather_humidity_2: >
            {{ forecast[3].humidity | round }}
          weather_precipitation_2: >
            {{ forecast[3].precipitation }}
          weather_timestamp_2: >
            {{ as_timestamp(forecast[3].datetime) | timestamp_custom('%I') | int }} {{ as_timestamp(forecast[3].datetime) | timestamp_custom('%p') }}

          weather_condition_3: >
            {% set cond3 = forecast[4].condition %}
            {% set next_setting = as_timestamp(state_attr('sun.sun', 'next_setting')) %}
            {% set next_rising = as_timestamp(state_attr('sun.sun', 'next_rising')) %}
            {% set cond3_time = as_timestamp(forecast[4].datetime) %}
            {% if cond3_time < next_rising and next_rising < next_setting %}
                {% if cond3 == 'sunny' %} night {% elif cond3 == 'partlycloudy' %} night-partly-cloudy {% else %} {{ cond3 }} {% endif %}
            {% else %}
                {{ cond3 }}
            {% endif %}
          weather_temperature_3: >
            {{ forecast[4].temperature | round }}
          weather_humidity_3: >
            {{ forecast[4].humidity | round }}
          weather_precipitation_3: >
            {{ forecast[4].precipitation }}
          weather_timestamp_3: >
            {{ as_timestamp(forecast[4].datetime) | timestamp_custom('%I') | int }} {{ as_timestamp(forecast[4].datetime) | timestamp_custom('%p') }}